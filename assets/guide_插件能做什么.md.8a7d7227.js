import{o as e,c as l,b as d}from"./app.d71e780f.js";const t='{"title":"vscode插件能做什么","description":"","frontmatter":{},"headers":[{"level":2,"title":"不受限的本地磁盘访问","slug":"不受限的本地磁盘访问"},{"level":2,"title":"自定义命令、快捷键、菜单","slug":"自定义命令、快捷键、菜单"},{"level":2,"title":"自定义跳转、自动补全、悬浮提示","slug":"自定义跳转、自动补全、悬浮提示"},{"level":2,"title":"自定义设置、自定义欢迎页","slug":"自定义设置、自定义欢迎页"},{"level":2,"title":"自定义WebView","slug":"自定义webview"},{"level":2,"title":"自定义左侧功能面板","slug":"自定义左侧功能面板"},{"level":2,"title":"自定义颜色、图标主题","slug":"自定义颜色、图标主题"},{"level":2,"title":"新增语言支持","slug":"新增语言支持"},{"level":2,"title":"Markdown增强","slug":"markdown增强"},{"level":2,"title":"其它","slug":"其它"}],"relativePath":"guide/插件能做什么.md","lastUpdated":1665622375204}',i={},o=[d('<h1 id="vscode插件能做什么">vscode插件能做什么</h1><p>既然前面讲到学习vscode插件开发很有必要，那插件到底能做什么呢？能实现什么功能？能从哪些方面动手脚？下面我们就来列举一些好让大家有个大概了解。</p><h2 id="不受限的本地磁盘访问">不受限的本地磁盘访问</h2><p>因为vscode是基于<code>Electron</code>开发的，可以使用<code>nodejs</code>随意读写本地文件、跨域请求、甚至创建一个本地server，这都是没有任何限制的，所以只要你想做，基本上没有不能实现的。</p><h2 id="自定义命令、快捷键、菜单">自定义命令、快捷键、菜单</h2><p>vscode插件很多功能都是基于一个个命令实现的，我们可以自定义一些命令，这个命令将出现在按下<code>Ctrl+Shift+P</code>后的命令列表里面，同时可以给命令配置快捷键、配置资源管理器菜单、编辑器菜单、标题菜单、下拉菜单、右上角图标等。</p><h2 id="自定义跳转、自动补全、悬浮提示">自定义跳转、自动补全、悬浮提示</h2><h2 id="自定义设置、自定义欢迎页">自定义设置、自定义欢迎页</h2><h2 id="自定义webview">自定义WebView</h2><h2 id="自定义左侧功能面板">自定义左侧功能面板</h2><h2 id="自定义颜色、图标主题">自定义颜色、图标主题</h2><h2 id="新增语言支持">新增语言支持</h2><p>给某一种原有没有的<code>语言</code>提供语言支持，语言支持包括很多方面，比如代码高亮、语法解析、折叠、跳转、补全等；</p><h2 id="markdown增强">Markdown增强</h2><p>你可以自定义markdown预览的样式、添加一些新语法、新功能的支持。</p><h2 id="其它">其它</h2><p>其它还有比如状态栏修改、通知提示、编辑器控制、git源代码控制、任务定义、Language Server、Debug Adapter等等</p>',17)];i.render=function(d,t,i,s,h,r){return e(),l("div",null,o)};export default i;export{t as __pageData};

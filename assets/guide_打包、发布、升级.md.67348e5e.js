import{o as e,c as o,e as c}from"./app.d035c38e.js";const l='{"title":"本地打包","description":"","frontmatter":{},"headers":[{"level":2,"title":"本地打包","slug":"本地打包"},{"level":2,"title":"发布应用市场","slug":"发布应用市场"},{"level":3,"title":"注册账号","slug":"注册账号"},{"level":3,"title":"创建令牌","slug":"创建令牌"},{"level":3,"title":"创建发布账号","slug":"创建发布账号"},{"level":3,"title":"发布","slug":"发布"},{"level":3,"title":"取消发布","slug":"取消发布"},{"level":3,"title":"更新","slug":"更新"},{"level":2,"title":"插件升级","slug":"插件升级"},{"level":3,"title":"发布到了应用市场","slug":"发布到了应用市场"},{"level":3,"title":"如果是本地打包","slug":"如果是本地打包"}],"relativePath":"guide/打包、发布、升级.md","lastUpdated":1665650843272}',i={},d=[c('<p>插件开发完了，如何发布出去分享给他人呢？主要有3种方法：</p><ul><li>方法一：直接把文件夹发给别人，让别人找到vscode的插件存放目录并放进去，然后重启vscode，一般不推荐；</li><li>方法二：打包成vsix插件，然后发送给别人安装，如果你的插件涉及机密不方便发布到应用市场，可以尝试采用这种方式；</li><li>方法三：注册开发者账号，发布到官网应用市场，这个发布和npm一样是不需要审核的。</li></ul><h2 id="本地打包">本地打包</h2><p>无论是本地打包还是发布到应用市场都需要借助<code>vsce</code>这个工具。</p><p>安装：</p><div class="language-bash"><pre><code><span class="token function">npm</span> i vsce -g\n</code></pre></div><p>打包成<code>vsix</code>文件：</p><div class="language-bash"><pre><code>vsce package\n</code></pre></div><p><strong>注意：</strong></p><p>打包的时候如果没有设置<code>publisher</code>会有如下提示：</p><p>![image-20221012210342367](/Users/jarvis/Library/Application Support/typora-user-images/image-20221012210342367.png)</p><p>生成好的vsix文件不能直接拖入安装，只能从扩展的右上角选择<code>Install from VSIX</code>安装：</p><p><img src="https://qn.huat.xyz/mac/20221012211111.png" alt="image-20221012211110977"></p><h2 id="发布应用市场">发布应用市场</h2><p>Visual Studio Code的应用市场基于微软自己的<code>Azure DevOps</code>，插件的身份验证、托管和管理都是在这里。</p><ul><li>要发布到应用市场首先得有应用市场的<code>publisher</code>账号；</li><li>而要有发布账号首先得有<code>Azure DevOps</code>组织；</li><li>而创建组织之前，首先得创建<code>Azure</code>账号；</li><li>创建<code>Azure</code>账号首先得有<code>Microsoft</code>账号；</li></ul><p>是不是有点晕，梳理一下：</p><ul><li>一个Microsoft账号可以创建多个<code>Azure</code>组织；</li><li>一个组织可以创建多个<code>publisher</code>账号；</li><li>同时一个组织可以创建多个<code>PAT</code>（<code>Personal Access Token</code>，个人访问令牌）；</li></ul><h3 id="注册账号">注册账号</h3><p>首先访问 <a href="https://login.live.com/" target="_blank" rel="noopener noreferrer">https://login.live.com/</a> 登录你的<code>Microsoft</code>账号，没有的先注册一个：</p><p><img src="https://qn.huat.xyz/mac/20221012211246.png" alt="image-20221012211246205"></p><p>然后访问： <a href="https://aka.ms/SignupAzureDevOps" target="_blank" rel="noopener noreferrer">https://aka.ms/SignupAzureDevOps</a> ，如果你从来没有使用过Azure，那么会看到如下提示：</p><p><img src="https://qn.huat.xyz/mac/20221012211308.png" alt="img"></p><p>点击继续，默认会创建一个以邮箱前缀为名的组织。</p><h3 id="创建令牌">创建令牌</h3><p>默认进入组织的主页后，点击右上角的<code>Security</code>：</p><h3 id="创建发布账号">创建发布账号</h3><p>获得个人访问令牌后，使用<code>vsce</code>以下命令创建新的发布者：</p><h3 id="发布">发布</h3><h4 id="发布注意事项">发布注意事项</h4><ul><li><code>README.md</code>文件默认会显示在插件主页；</li><li><code>README.md</code>中的资源必须全部是<code>HTTPS</code>的，如果是<code>HTTP</code>会发布失败；</li><li><code>CHANGELOG.md</code>会显示在变更选项卡；</li><li>如果代码是放在git仓库并且设置了repository字段，发布前必须先提交git，否则会提示<code>Git working directory not clean</code>；</li><li>发布后需要等待几分钟应用市场才会更新；</li></ul><p>另外，如前面所说，如果<code>Organization</code>没有选择<code>all accessible organizations</code>，或者<code>Scopes</code>没有选择<code>Full access</code>，发布的时候可能会报如下错误：</p><div class="language-"><pre><code>Error: Failed Request: Unauthorized(401) - https://marketplace.visualstudio.com/_apis/gallery\nBe sure to use a Personal Access Token which has access to **all accessible accounts**.\nSee https://code.visualstudio.com/docs/tools/vscecli#_common-questions for more information.\n</code></pre></div><h4 id="增量发布">增量发布</h4><p>版本号：<code>major.minor.patch</code></p><p>如果想让发布之后版本号的patch自增，例如：<code>1.0.2</code> -&gt; <code>1.0.3</code>，可以这样：</p><div class="language-bash"><pre><code>vsce publish patch\n</code></pre></div><p>执行这个命令后会自动修改<code>package.json</code>里面的版本号。同理，<code>vsce publish minor</code>也是可以的。</p><h3 id="取消发布">取消发布</h3><div class="language-"><pre><code>vsce unpublish (publisher name).(extension name)\n</code></pre></div><h3 id="更新">更新</h3><p>如果修改了插件代码想要重新发布，只需要修改版本号然后重新执行<code>vsce publish</code>即可。</p><h2 id="插件升级">插件升级</h2><h3 id="发布到了应用市场">发布到了应用市场</h3><p>如果发布到了应用市场，那么一般来说会自动检测有没有新版本，有的话会自动无感知升级，但具体什么时候会去检测我还没有研究过，已经确定的是在扩展面板搜索插件名字会自动检测，重启vscode也会检测。</p><h3 id="如果是本地打包">如果是本地打包</h3><p>如果是打包成<code>vsix</code>，那么只能自己实现升级检测功能呢，通过对比服务器上某个文件的版本号，具体我就不细讲了。</p>',47)];i.render=function(c,l,i,s,p,t){return e(),o("div",null,d)};export default i;export{l as __pageData};

import{o as n,c as t,e as s}from"./app.d035c38e.js";const a='{"title":"代码片段","description":"","frontmatter":{},"headers":[{"level":2,"title":"代码片段","slug":"代码片段"},{"level":2,"title":"整体流程","slug":"整体流程"},{"level":2,"title":"难点","slug":"难点"},{"level":2,"title":"实现","slug":"实现"},{"level":2,"title":"说明","slug":"说明"}],"relativePath":"usingDocument/FunctionArea/snippet.md","lastUpdated":1665650843272}',p={},o=[s('<h2 id="代码片段">代码片段</h2><blockquote><p>内置了基础的代码片段，支持各种语言；支持远程配置，重启vscode的时候会从远端拉取数据判断是否需要对代码片段进行更新 ；支持是否启用远程代码片段 ； 支持自定义API接入</p><p>规则：基础通用代码片段直接写在插件里面，业务线的代码片段通过动态配置。</p></blockquote><h2 id="整体流程">整体流程</h2><p><img src="http://qn.huat.xyz/mac/20210925162524.png" alt=""></p><h2 id="难点">难点</h2><p>1、异步读写文件</p><p>2、错误处理</p><p>3、如何判断是否需要进行更新，来自接口的数据和本地的json文件的数据如何进行对比？</p><h2 id="实现">实现</h2><p><code>snippet.ts</code> 文件</p><h2 id="说明">说明</h2><p>1、代码片段配置后台</p><p><a href="https://vscode.ironc.cn/" target="_blank" rel="noopener noreferrer">https://vscode.ironc.cn/</a> 【账户密码：zzfe】</p><p>2、自定义接口，需要遵循如下格式</p><div class="language-json"><pre><code><span class="token punctuation">{</span>\n\t<span class="token property">&quot;code&quot;</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>\n\t<span class="token property">&quot;data&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>\n\t\t<span class="token punctuation">{</span>\n\t\t\t<span class="token property">&quot;prefix&quot;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n\t\t\t<span class="token property">&quot;body&quot;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n\t\t\t<span class="token property">&quot;description&quot;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n\t\t<span class="token punctuation">}</span>\n\t\t<span class="token comment">// ...</span>\n\t<span class="token punctuation">]</span>\n\t<span class="token property">&quot;message&quot;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',15)];p.render=function(s,a,p,e,c,l){return n(),t("div",null,o)};export default p;export{a as __pageData};
